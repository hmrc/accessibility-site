---
title: Fully-automated testing - Types of accessibility testing
layout: contentPage.njk
subnav: types-of-accessibility-testing
subsubnav: fully-automated-testing
---

<h2 class="govuk-caption-l hmrc-caption-l"><span class="govuk-visually-hidden">This section is </span>Testing your service for accessibility</h2>
<h1 class="govuk-heading-xl">Fully-automated testing</h1>

<p class="govuk-body-l">This can be set as part of a continuous integration process or as unit tests, but is typically run without an interface and generates a list of passes or fails.</p>

<h2 class="govuk-heading-l">Continuous Integration (CI) tools</h2>

<p class="govuk-body">Once your service has been deployed to staging youâ€™ll want to introduce some automated tests to that service's pipeline. Continuous integration tools are a good baseline for a service as they run all the time code is being added. Because of this they can be a good second line of defence against issues creeping in. However they must be monitored and any issues investigated.</p>
<p class="govuk-body">Note that just like any automated testing a CI tool cannot be relied on to find all the issues, so it should only be used as one method to keep a service accessible.</p>

<h3 class="govuk-heading-m">Accessibility Test Job Builder</h3>
<p class="govuk-body">The HMRC job builder is a configuration setting that captures and archives all HTML pages that your user journey tests visit. It generates an output of actionable WCAG and HTML issues which can be reviewed and fixed.</p>
<p class="govuk-body">One of the benefits of implementing this as a component of the build is the low cost of adopting for teams and as improvements to the tooling are rolled out they will be available to everyone making use of the job builder. Features like improved reporting, axe / HTML validator upgrades or even the addition of a new tool will not require effort from delivery teams.</p>